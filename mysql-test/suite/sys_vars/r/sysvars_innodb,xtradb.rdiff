49a50,63
> VARIABLE_NAME	INNODB_ADAPTIVE_HASH_INDEX_PARTITIONS
> SESSION_VALUE	NULL
> GLOBAL_VALUE	1
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	1
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	Number of InnoDB adaptive hash index partitions (default 1: disable partitioning)
> NUMERIC_MIN_VALUE	1
> NUMERIC_MAX_VALUE	64
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	YES
> COMMAND_LINE_ARGUMENT	REQUIRED
343a358,371
> VARIABLE_NAME	INNODB_BUFFER_POOL_POPULATE
> SESSION_VALUE	NULL
> GLOBAL_VALUE	OFF
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	OFF
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BOOLEAN
> VARIABLE_COMMENT	Preallocate (pre-fault) the page frames required for the mapping established by the buffer pool memory region. Disabled by default.
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	YES
> COMMAND_LINE_ARGUMENT	NONE
421c449
< VARIABLE_COMMENT	DEPRECATED. Use innodb_checksum_algorithm=NONE instead of setting this to OFF. Enable InnoDB checksums validation (enabled by default). Disable with --skip-innodb-checksums.
---
> VARIABLE_COMMENT	DEPRECATED. Use innodb_checksum_algorithm=NONE instead of setting this to OFF
441a470,567
> VARIABLE_NAME	INNODB_CLEANER_EVICTION_FACTOR
> SESSION_VALUE	NULL
> GLOBAL_VALUE	OFF
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	OFF
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BOOLEAN
> VARIABLE_COMMENT	Make page cleaner LRU flushes use evicted instead of flushed page counts for its heuristics
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	OPTIONAL
> VARIABLE_NAME	INNODB_CLEANER_FLUSH_CHUNK_SIZE
> SESSION_VALUE	NULL
> GLOBAL_VALUE	100
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	100
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	Divide page cleaner flush list flush batches into chunks of this size
> NUMERIC_MIN_VALUE	1
> NUMERIC_MAX_VALUE	18446744073709551615
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
> VARIABLE_NAME	INNODB_CLEANER_FREE_LIST_LWM
> SESSION_VALUE	NULL
> GLOBAL_VALUE	10
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	10
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	Page cleaner will keep on flushing the same buffer pool instance if its free list length is below this percentage of innodb_lru_scan_depth
> NUMERIC_MIN_VALUE	0
> NUMERIC_MAX_VALUE	100
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
> VARIABLE_NAME	INNODB_CLEANER_LRU_CHUNK_SIZE
> SESSION_VALUE	NULL
> GLOBAL_VALUE	100
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	100
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	Divide page cleaner LRU list flush batches into chunks of this size
> NUMERIC_MIN_VALUE	1
> NUMERIC_MAX_VALUE	18446744073709551615
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
> VARIABLE_NAME	INNODB_CLEANER_LSN_AGE_FACTOR
> SESSION_VALUE	NULL
> GLOBAL_VALUE	HIGH_CHECKPOINT
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	HIGH_CHECKPOINT
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	ENUM
> VARIABLE_COMMENT	The formula for LSN age factor for page cleaner adaptive flushing. LEGACY: Original Oracle MySQL 5.6 formula. HIGH_CHECKPOINT: (the default) Percona Server 5.6 formula.
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	LEGACY,HIGH_CHECKPOINT
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	OPTIONAL
> VARIABLE_NAME	INNODB_CLEANER_MAX_FLUSH_TIME
> SESSION_VALUE	NULL
> GLOBAL_VALUE	1000
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	1000
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	The maximum time limit for a single flush list flush iteration by the page cleaner thread in miliseconds
> NUMERIC_MIN_VALUE	0
> NUMERIC_MAX_VALUE	18446744073709551615
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
> VARIABLE_NAME	INNODB_CLEANER_MAX_LRU_TIME
> SESSION_VALUE	NULL
> GLOBAL_VALUE	1000
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	1000
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	The maximum time limit for a single LRU tail flush iteration by the page cleaner thread in miliseconds
> NUMERIC_MIN_VALUE	0
> NUMERIC_MAX_VALUE	18446744073709551615
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
539a666,679
> VARIABLE_NAME	INNODB_CORRUPT_TABLE_ACTION
> SESSION_VALUE	NULL
> GLOBAL_VALUE	assert
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	assert
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	ENUM
> VARIABLE_COMMENT	Warn corruptions of user tables as 'corrupt table' instead of not crashing itself, when used with file_per_table. All file io for the datafile after detected as corrupt are disabled, except for the deletion
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	assert,warn,salvage
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
707a848,861
> VARIABLE_NAME	INNODB_EMPTY_FREE_LIST_ALGORITHM
> SESSION_VALUE	NULL
> GLOBAL_VALUE	BACKOFF
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	BACKOFF
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	ENUM
> VARIABLE_COMMENT	The algorithm to use for empty free list handling.  Allowed values: LEGACY: Original Oracle MySQL 5.6 handling with single page flushes; BACKOFF: (default) Wait until cleaner produces a free page.
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	LEGACY,BACKOFF
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	OPTIONAL
777a932,945
> VARIABLE_NAME	INNODB_FAKE_CHANGES
> SESSION_VALUE	OFF
> GLOBAL_VALUE	OFF
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	OFF
> VARIABLE_SCOPE	SESSION
> VARIABLE_TYPE	BOOLEAN
> VARIABLE_COMMENT	In the transaction after enabled, UPDATE, INSERT and DELETE only move the cursor to the records and do nothing other operations (no changes, no ibuf, no undo, no transaction log) in the transaction. This is to cause replication prefetch IO. ATTENTION: the transaction started after enabled is affected.
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	OPTIONAL
905c1073
< SESSION_VALUE	NULL
---
> SESSION_VALUE	1
909c1077
< VARIABLE_SCOPE	GLOBAL
---
> VARIABLE_SCOPE	SESSION
1001a1170,1183
> VARIABLE_NAME	INNODB_FOREGROUND_PREFLUSH
> SESSION_VALUE	NULL
> GLOBAL_VALUE	EXPONENTIAL_BACKOFF
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	EXPONENTIAL_BACKOFF
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	ENUM
> VARIABLE_COMMENT	The algorithm InnoDB uses for the query threads at sync preflush.  Possible values are SYNC_PREFLUSH: perform a sync preflush as Oracle MySQL; EXPONENTIAL_BACKOFF: (default) wait for the page cleaner flush.
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	SYNC_PREFLUSH,EXPONENTIAL_BACKOFF
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	OPTIONAL
1225a1408,1421
> VARIABLE_NAME	INNODB_KILL_IDLE_TRANSACTION
> SESSION_VALUE	NULL
> GLOBAL_VALUE	0
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	0
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT
> VARIABLE_COMMENT	No effect for this build.
> NUMERIC_MIN_VALUE	0
> NUMERIC_MAX_VALUE	9223372036854775807
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
1253a1450,1463
> VARIABLE_NAME	INNODB_LOCKING_FAKE_CHANGES
> SESSION_VALUE	NULL
> GLOBAL_VALUE	ON
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	ON
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BOOLEAN
> VARIABLE_COMMENT	###EXPERIMENTAL### if enabled, transactions will get S row locks instead of X locks for fake changes.  If disabled, fake change transactions will not take any locks at all.
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	NONE
1281a1492,1547
> VARIABLE_NAME	INNODB_LOG_ARCHIVE
> SESSION_VALUE	NULL
> GLOBAL_VALUE	OFF
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	OFF
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BOOLEAN
> VARIABLE_COMMENT	Set to 1 if you want to have logs archived.
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	OPTIONAL
> VARIABLE_NAME	INNODB_LOG_ARCH_DIR
> SESSION_VALUE	NULL
> GLOBAL_VALUE	PATH
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	VARCHAR
> VARIABLE_COMMENT	Where full logs should be archived.
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	YES
> COMMAND_LINE_ARGUMENT	REQUIRED
> VARIABLE_NAME	INNODB_LOG_ARCH_EXPIRE_SEC
> SESSION_VALUE	NULL
> GLOBAL_VALUE	0
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	0
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	Expiration time for archived innodb transaction logs.
> NUMERIC_MIN_VALUE	0
> NUMERIC_MAX_VALUE	18446744073709551615
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	OPTIONAL
> VARIABLE_NAME	INNODB_LOG_BLOCK_SIZE
> SESSION_VALUE	NULL
> GLOBAL_VALUE	512
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	512
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	###EXPERIMENTAL###: The log block size of the transaction log file. Changing for created log file is not supported. Use on your own risk!
> NUMERIC_MIN_VALUE	512
> NUMERIC_MAX_VALUE	65536
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	YES
> COMMAND_LINE_ARGUMENT	REQUIRED
1309a1576,1589
> VARIABLE_NAME	INNODB_LOG_CHECKSUM_ALGORITHM
> SESSION_VALUE	NULL
> GLOBAL_VALUE	INNODB
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	INNODB
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	ENUM
> VARIABLE_COMMENT	The algorithm InnoDB uses for log block checksums. Possible values are CRC32 (hardware accelerated if the CPU supports it) write crc32, allow any of the other checksums to match when reading; STRICT_CRC32 write crc32, do not allow other algorithms to match when reading; INNODB write a software calculated checksum, allow any other checksums to match when reading; STRICT_INNODB write a software calculated checksum, do not allow other algorithms to match when reading; NONE write a constant magic number, do not do any checksum verification when reading (same as innodb_checksums=OFF); STRICT_NONE write a constant magic number, do not allow values other than that magic number when reading; Logs created when this option is set to crc32/strict_crc32/none/strict_none will not be readable by any MySQL version or Percona Server versions that donot support this feature
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	CRC32,STRICT_CRC32,INNODB,STRICT_INNODB,NONE,STRICT_NONE
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
1379a1660,1687
> VARIABLE_NAME	INNODB_MAX_BITMAP_FILE_SIZE
> SESSION_VALUE	NULL
> GLOBAL_VALUE	104857600
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	104857600
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	The maximum size of changed page bitmap files
> NUMERIC_MIN_VALUE	4096
> NUMERIC_MAX_VALUE	18446744073709551615
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
> VARIABLE_NAME	INNODB_MAX_CHANGED_PAGES
> SESSION_VALUE	NULL
> GLOBAL_VALUE	1000000
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	1000000
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	The maximum number of rows for INFORMATION_SCHEMA.INNODB_CHANGED_PAGES table, 0 - unlimited
> NUMERIC_MIN_VALUE	0
> NUMERIC_MAX_VALUE	18446744073709551615
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
1645a1954,2009
> VARIABLE_NAME	INNODB_PRIORITY_CLEANER
> SESSION_VALUE	NULL
> GLOBAL_VALUE	OFF
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	OFF
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BOOLEAN
> VARIABLE_COMMENT	Make buffer pool cleaner and LRU manager threads acquire shared resources with priority
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	OPTIONAL
> VARIABLE_NAME	INNODB_PRIORITY_IO
> SESSION_VALUE	NULL
> GLOBAL_VALUE	OFF
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	OFF
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BOOLEAN
> VARIABLE_COMMENT	Make I/O threads acquire shared resources with priority
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	OPTIONAL
> VARIABLE_NAME	INNODB_PRIORITY_MASTER
> SESSION_VALUE	NULL
> GLOBAL_VALUE	OFF
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	OFF
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BOOLEAN
> VARIABLE_COMMENT	Make buffer pool cleaner thread acquire shared resources with priority
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	OPTIONAL
> VARIABLE_NAME	INNODB_PRIORITY_PURGE
> SESSION_VALUE	NULL
> GLOBAL_VALUE	OFF
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	OFF
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BOOLEAN
> VARIABLE_COMMENT	Make purge coordinator and worker threads acquire shared resources with priority
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	OPTIONAL
1813a2178,2219
> VARIABLE_NAME	INNODB_SCHED_PRIORITY_IO
> SESSION_VALUE	NULL
> GLOBAL_VALUE	19
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	19
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	Nice value for the I/O handler thread scheduling
> NUMERIC_MIN_VALUE	0
> NUMERIC_MAX_VALUE	39
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
> VARIABLE_NAME	INNODB_SCHED_PRIORITY_MASTER
> SESSION_VALUE	NULL
> GLOBAL_VALUE	19
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	19
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	Nice value for the master thread scheduling
> NUMERIC_MIN_VALUE	0
> NUMERIC_MAX_VALUE	39
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
> VARIABLE_NAME	INNODB_SCHED_PRIORITY_PURGE
> SESSION_VALUE	NULL
> GLOBAL_VALUE	19
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	19
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	Nice value for the purge thread scheduling
> NUMERIC_MIN_VALUE	0
> NUMERIC_MAX_VALUE	39
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
1855a2262,2289
> VARIABLE_NAME	INNODB_SHOW_LOCKS_HELD
> SESSION_VALUE	NULL
> GLOBAL_VALUE	10
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	10
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	Number of locks held to print for each InnoDB transaction in SHOW INNODB STATUS.
> NUMERIC_MIN_VALUE	0
> NUMERIC_MAX_VALUE	1000
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	REQUIRED
> VARIABLE_NAME	INNODB_SHOW_VERBOSE_LOCKS
> SESSION_VALUE	NULL
> GLOBAL_VALUE	0
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	0
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BIGINT UNSIGNED
> VARIABLE_COMMENT	Whether to show records locked in SHOW INNODB STATUS.
> NUMERIC_MIN_VALUE	0
> NUMERIC_MAX_VALUE	1
> NUMERIC_BLOCK_SIZE	0
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	OPTIONAL
1919c2353
< VARIABLE_COMMENT	Specifies how InnoDB index statistics collection code should treat NULLs. Possible values are NULLS_EQUAL (default), NULLS_UNEQUAL and NULLS_IGNORED
---
> VARIABLE_COMMENT	Specifies how InnoDB index statistics collection code should treat NULLs
2149a2584,2611
> VARIABLE_NAME	INNODB_TRACK_CHANGED_PAGES
> SESSION_VALUE	NULL
> GLOBAL_VALUE	OFF
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	OFF
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BOOLEAN
> VARIABLE_COMMENT	Track the redo log for changed pages and output a changed page bitmap
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	NONE
> VARIABLE_NAME	INNODB_TRACK_REDO_LOG_NOW
> SESSION_VALUE	NULL
> GLOBAL_VALUE	OFF
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	OFF
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BOOLEAN
> VARIABLE_COMMENT	Force log tracker to catch up with checkpoint now
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	OPTIONAL
2227c2689
< VARIABLE_COMMENT	Prevent partial page writes, via atomic writes.The option is used to prevent partial writes in case of a crash/poweroff, as faster alternative to doublewrite buffer.Currently this option works only on Linux only with FusionIO device, and directFS filesystem.
---
> VARIABLE_COMMENT	Prevent partial page writes, via atomic writes (beta). The option is used to prevent partial writes in case of a crash/poweroff, as faster alternative to doublewrite buffer. Currently this option works only on Linux only with FusionIO device, and directFS filesystem.
2247a2710,2723
> VARIABLE_NAME	INNODB_USE_GLOBAL_FLUSH_LOG_AT_TRX_COMMIT
> SESSION_VALUE	NULL
> GLOBAL_VALUE	ON
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	ON
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BOOLEAN
> VARIABLE_COMMENT	Use global innodb_flush_log_at_trx_commit value. (default: ON).
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	NO
> COMMAND_LINE_ARGUMENT	NONE
2261a2738,2751
> VARIABLE_NAME	INNODB_USE_STACKTRACE
> SESSION_VALUE	NULL
> GLOBAL_VALUE	OFF
> GLOBAL_VALUE_ORIGIN	COMPILE-TIME
> DEFAULT_VALUE	OFF
> VARIABLE_SCOPE	GLOBAL
> VARIABLE_TYPE	BOOLEAN
> VARIABLE_COMMENT	Print stacktrace on long semaphore wait (off by default supported only on linux)
> NUMERIC_MIN_VALUE	NULL
> NUMERIC_MAX_VALUE	NULL
> NUMERIC_BLOCK_SIZE	NULL
> ENUM_VALUE_LIST	NULL
> READ_ONLY	YES
> COMMAND_LINE_ARGUMENT	NONE
2292c2782
< GLOBAL_VALUE	5.6.21
---
> GLOBAL_VALUE	5.6.21-70.0
2297c2787
< VARIABLE_COMMENT	InnoDB version
---
> VARIABLE_COMMENT	Percona-InnoDB-plugin version
